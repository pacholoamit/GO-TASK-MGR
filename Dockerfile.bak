# Install Node dependencies
FROM node:16-alpine AS deps

RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY . .
# COPY ./web/package.json ./web/yarn.lock ./

RUN cd web && yarn install --frozen-lockfile

# # Build the source code and export build artifacts
FROM node:16-alpine AS builder
WORKDIR /app
COPY --from=deps /app/web/node_modules ./web/node_modules
COPY web ./ 
RUN yarn export

# # Build Go binary with the exported artifacts
# FROM golang:1.18.3-alpine AS runner
# ENV PORT 8081
# RUN apk add build-base 
# WORKDIR /app
# COPY go.mod ./
# COPY go.sum ./
# RUN go mod download
# RUN mkdir ./web
# COPY --from=builder /app/web/out ./web/out
# RUN go build -o /main.go ./cmd/main.go 
# EXPOSE ${PORT}

# CMD ["/main.go"]